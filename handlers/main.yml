---
# Chain handlers to support multiple process supervisors. A task simply needs
# to notify 'restart Minecraft', which will trigger the supervisor-specific
# actions.

- name: reload systemd
  systemd:
    daemon_reload: yes
  when: not minecraft_process_control == 'systemd'
  become: true

- name: restart Minecraft
  debug:
    msg: restarting Minecraft using {{ minecraft_process_control }}
  changed_when: true
  notify:
    - restart Minecraft (supervisor)
    - restart Minecraft (systemd)

- name: restart Minecraft (supervisor)
  supervisorctl:
    name: "{{ minecraft_service_name }}"
    state: restarted
  when: minecraft_process_control == 'supervisor'

- name: restart Minecraft (systemd)
  service:
    name: "{{ minecraft_service_name }}"
    state: restarted
  when: minecraft_process_control == 'systemd'

- name: enable service
  debug:
    msg: enabling Minecraft service using {{ minecraft_process_control }}
  changed_when: true
  notify:
    - enable service (supervisor)
    - enable service (systemd)

- name: enable service (supervisor)
  supervisorctl:
    name: "{{ minecraft_service_name }}"
    state: restarted
  become: true
  when: minecraft_process_control == 'supervisor'

- name: enable service (systemd)
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - "{{ minecraft_service_name }}.service"
    - "{{ minecraft_service_name }}.socket"
  when: minecraft_process_control == 'systemd'

# Since this is a symlink, we need to directly chown
# to allow setting the permissions on the link
# Ignore Lint Checks:  305
- name: Update Ownership of Symlink
  shell: "chown -h {{ minecraft_user }}:{{ minecraft_group }} {{ minecraft_home }}/$MINECRAFT_SERVER_JAR"
  # noqa 305
  args:
    warn: false
  environment:
    MINECRAFT_SERVER_JAR: "{{ (minecraft_server == \"forge\")|ternary(\"forge.jar\", \"minecraft_server.jar\") }}"
  changed_when: false
